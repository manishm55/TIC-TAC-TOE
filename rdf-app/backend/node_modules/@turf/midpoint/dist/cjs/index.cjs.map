{"version":3,"sources":["/home/runner/work/turf/turf/packages/turf-midpoint/dist/cjs/index.cjs","../../index.ts"],"names":["midpoint"],"mappings":"AAAA;ACCA,wCAAwB;AACxB,gDAA4B;AAC5B,0CAAyB;AAsBzB,SAAS,QAAA,CAAS,MAAA,EAAe,MAAA,EAA+B;AAC9D,EAAA,MAAM,KAAA,EAAO,gCAAA,MAAS,EAAQ,MAAM,CAAA;AACpC,EAAA,MAAM,QAAA,EAAU,8BAAA,MAAQ,EAAQ,MAAM,CAAA;AACtC,EAAA,MAAMA,UAAAA,EAAW,sCAAA,MAAY,EAAQ,KAAA,EAAO,CAAA,EAAG,OAAO,CAAA;AAEtD,EAAA,OAAOA,SAAAA;AACT;AAGA,IAAO,sBAAA,EAAQ,QAAA;ADvBf;AACE;AACA;AACF,qEAAC","file":"/home/runner/work/turf/turf/packages/turf-midpoint/dist/cjs/index.cjs","sourcesContent":[null,"import { Feature, Point } from \"geojson\";\nimport { bearing } from \"@turf/bearing\";\nimport { destination } from \"@turf/destination\";\nimport { distance } from \"@turf/distance\";\nimport { Coord } from \"@turf/helpers\";\n\n/**\n * Takes two points and returns a point midway between them. The midpoint is\n * calculated geodesically, meaning the curvature of the earth is taken into\n * account.\n *\n * @function\n * @param {Coord} point1 first point\n * @param {Coord} point2 second point\n * @returns {Feature<Point>} a point midway between `pt1` and `pt2`\n * @example\n * const point1 = turf.point([144.834823, -37.771257]);\n * const point2 = turf.point([145.14244, -37.830937]);\n *\n * const midpoint = turf.midpoint(point1, point2);\n *\n * //addToMap\n * const addToMap = [point1, point2, midpoint];\n * midpoint.properties['marker-color'] = '#f00';\n */\nfunction midpoint(point1: Coord, point2: Coord): Feature<Point> {\n  const dist = distance(point1, point2);\n  const heading = bearing(point1, point2);\n  const midpoint = destination(point1, dist / 2, heading);\n\n  return midpoint;\n}\n\nexport { midpoint };\nexport default midpoint;\n"]}